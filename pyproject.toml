[tool.poetry]
authors = ["Franck Nijhof <opensource@frenck.dev>"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: AsyncIO",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
description = "Asynchronous Python client for Tailwind garage door openers."
documentation = "https://github.com/frenck/python-gotailwind"
homepage = "https://github.com/frenck/python-gotailwind"
keywords = ["gotailwind", "tailwind", "iq3", "myq", "chamberlain", "craftsman", "liftmaster"]
license = "MIT"
maintainers = ["Franck Nijhof <opensource@frenck.dev>"]
name = "gotailwind"
packages = [
  {include = "gotailwind", from = "src"},
]
readme = "README.md"
repository = "https://github.com/frenck/python-gotailwind"
version = "0.0.0"

[tool.poetry.dependencies]
aiohttp = ">=3.0.0"
awesomeversion = ">=22.8.0"
backoff = ">=2.2.1"
mashumaro = ">=3.10"
orjson = ">=3.9.8"
python = "^3.11"
typer = {version = ">=0.9", optional = true, extras = ["all"]}
yarl = ">=1.6.0"
zeroconf = ">=0.126.0"

[tool.poetry.extras]
cli = ["typer"]

[tool.poetry.scripts]
tailwind = "gotailwind.cli:cli"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/frenck/python-gotailwind/issues"
Changelog = "https://github.com/frenck/python-gotailwind/releases"

[tool.poetry.group.dev.dependencies]
aresponses = "3.0.0"
codespell = "2.2.6"
covdefaults = "2.3.0"
coverage = {version = "7.4.3", extras = ["toml"]}
mypy = "1.8.0"
pre-commit = "3.6.2"
pre-commit-hooks = "4.5.0"
pylint = "3.0.4"
pytest = "7.4.4"
pytest-asyncio = "0.23.5"
pytest-cov = "4.1.0"
ruff = "0.2.2"
safety = "3.0.1"
syrupy = "4.6.1"
yamllint = "1.35.1"

[tool.coverage.run]
plugins = ["covdefaults"]
source = ["gotailwind"]

[tool.coverage.report]
show_missing = true
omit = ["src/gotailwind/cli/*"]

[tool.mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
platform = "linux"
python_version = "3.11"

# show error messages from unrelated files
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pylint.MASTER]
extension-pkg-whitelist = [
  "orjson",
]
ignore = [
  "tests",
]

[tool.pylint.BASIC]
good-names = [
  "_",
  "ex",
  "fp",
  "i",
  "id",
  "j",
  "k",
  "on",
  "Run",
  "T",
]

[tool.pylint.DESIGN]
max-attributes = 8

[tool.pylint."MESSAGES CONTROL"]
disable = [
  "duplicate-code",
  "format",
  "unsubscriptable-object",
]

[tool.pylint.SIMILARITIES]
ignore-imports = true

[tool.pylint.FORMAT]
max-line-length = 88

[tool.pytest.ini_options]
addopts = "--cov"
asyncio_mode = "auto"

[tool.ruff]
ignore = [
  "ANN101", # Self... explanatory
  "ANN401", # Opinioated warning on disallowing dynamically typed expressions
  "D203", # Conflicts with other rules
  "D213", # Conflicts with other rules
  "D417", # False positives in some occasions
  "PLR2004", # Just annoying, not really useful

  # Conflicts with the Ruff formatter
  "COM812",
  "ISC001",
]
select = ["ALL"]

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.isort]
known-first-party = ["gotailwind"]

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = ["mashumaro.mixins.orjson.DataClassORJSONMixin"]

[tool.ruff.mccabe]
max-complexity = 25

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
